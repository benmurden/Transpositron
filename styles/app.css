/**
 *  Do not remove this comments bellow. It's the markers used by wiredep to inject
 *  sass dependencies when defined in the bower.json of your dependencies
 */
@import url(http://fonts.googleapis.com/css?family=Roboto+Slab:400,700|Roboto:400,700,700italic,400italic);
html {
  font-family: 'Roboto Slab', serif; }

a {
  color: #FFCCBC; }

[layout=row] {
  -ms-flex-direction: row;
      flex-direction: row; }

.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

.thumbnail {
  height: 200px; }
  .thumbnail img.pull-right {
    width: 50px; }

md-toolbar.md-default-theme {
  background-color: black; }

section.jumbotron {
  margin-bottom: 30px;
  padding: 1px 30px;
  background-color: #BF360C;
  text-align: center;
  color: white; }
  section.jumbotron h1 {
    font-size: 2.4em; }
    @media (min-width: 600px) {
      section.jumbotron h1 {
        font-size: 3em; } }

.techs md-card {
  padding: 1em; }
  .techs md-card img.pull-right {
    float: right;
    width: 50px; }

.about-text {
  font-size: 1.5em;
  padding: 2em;
  max-width: 32em; }

.flex-input {
  width: 80%; }

/**
 *  Do not remove this comments bellow. It's the markers used by gulp-inject to inject
 *  all your sass files automatically
 */
.acme-malarkey {
  text-transform: capitalize;
  color: #cb3837; }
  .acme-malarkey:after {
    animation: cursor-blink 0.4s linear infinite;
    content: "|";
    color: #cb3837; }

@keyframes cursor-blink {
  1% {
    opacity: 0; }
  40% {
    opacity: 0; }
  60% {
    opacity: 1; }
  100% {
    opacity: 1; } }

.acme-navbar-text {
  color: white; }

.piano-key {
  background-image: linear-gradient(175deg, white 0%, #f2f2f2 50%, #e0e0e0 51%, whitesmoke 100%);
  box-shadow: inset 0 -5px 5px rgba(0, 0, 0, 0.8);
  transition: background-position 0.2s ease-out, box-shadow 0.2s ease-out;
  background-position: 0 0;
  background-size: auto 200%;
  cursor: default;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  position: relative; }
  .piano-key .inner {
    color: gray;
    text-align: center;
    padding-top: 25vh;
    padding-bottom: 10px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-line-pack: center;
        align-content: center;
    -ms-flex-direction: column;
        flex-direction: column; }
  .piano-key.note-down {
    box-shadow: inset 0 -8px 5px rgba(0, 0, 0, 0.8);
    background-position: 0 100%; }
  .piano-key.disabled {
    background-image: linear-gradient(175deg, #abb0ba 0%, #9da3af 50%, #89909f 51%, #a0a5b1 100%); }

.key-label {
  position: absolute;
  bottom: 30px;
  text-align: center;
  width: 70%;
  margin-left: -20%;
  transform: translateX(50%);
  color: #BF360C;
  opacity: 0;
  transition: opacity 0.8s; }
  .key-label.visible {
    opacity: 1; }

.black-key {
  -ms-flex: 0;
      flex: 0;
  position: relative;
  z-index: 20; }
  .black-key.disabled .inner {
    border-top: none;
    background-image: linear-gradient(175deg, #3e434c 0%, #474c57 9%, #555b68 24%, #3e434c 40%, #2e3138 49%, #555b68 50%, #6e7687 61%, #8f96a3 75%, #818898 88%, #737b8c 100%); }
  .black-key .inner {
    background-image: linear-gradient(175deg, #121212 0%, #1c1c1c 9%, #2b2b2b 24%, #121212 40%, black 49%, #2b2b2b 50%, #474747 61%, #666666 75%, #595959 88%, #4d4d4d 100%);
    transition: background-position 0.2s ease-out, background-size 0.2s, box-shadow 0.2s ease-out;
    background-position: 0 0;
    background-size: auto 200%;
    width: 6.4vw;
    padding-top: 17.5vh;
    position: absolute;
    left: -3.2vw;
    border-radius: 0 0 1vw 1vw; }
    @media (min-width: 600px) {
      .black-key .inner {
        width: 4vw;
        left: -2vw; } }
    @media (min-width: 1280px) {
      .black-key .inner {
        width: 2.4vw;
        left: -1.2vw; } }
  .black-key.note-down .inner {
    background-position: 0 100%; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnNjc3MiLCJpbmRleC5jc3MiLCJjb21wb25lbnRzL21hbGFya2V5L21hbGFya2V5LnNjc3MiLCJjb21wb25lbnRzL25hdmJhci9uYXZiYXIuc2NzcyIsImNvbXBvbmVudHMvdG4ta2V5Ym9hcmQvdG4ta2V5Ym9hcmQuc2NzcyIsIl92YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFNSCwyR0FBWTtBQUVaO0VBQ0Usa0NBQWtDLEVBQ25DOztBQUVEO0VBQ0UsZUFBZSxFQUNoQjs7QUNORDtFRFNFLHdCQUFvQjtNQUFwQixvQkFBb0IsRUFDckI7O0FBRUQ7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixpQkFBaUIsRUFDbEI7O0FBRUQ7RUFDRSxjQUFjLEVBS2Y7RUFORDtJQUlJLFlBQVksRUFDYjs7QUFHSDtFQUNFLHdCQUF3QixFQUN6Qjs7QUFFRDtFQUNFLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsMEJBQTBCO0VBQzFCLG1CQUFtQjtFQUVuQixhQUFhLEVBVWQ7RUFoQkQ7SUFVSSxpQkFBa0IsRUFLbkI7SUFIQztNQVpKO1FBYU0sZUFKVSxFQU1iLEVBQUE7O0FBR0g7RUFHSSxhQUFhLEVBTWQ7RUFUSDtJQU1NLGFBQWE7SUFDYixZQUFZLEVBQ2I7O0FBSUw7RUFDRSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLGdCQUFnQixFQUNqQjs7QUFFRDtFQUNFLFdBQVcsRUFDWjs7QUFFRDs7O0dBR0c7QUVyRkg7RUFDRSwyQkFBMkI7RUFDM0IsZUFBZSxFQU9oQjtFQVREO0lBS0ksNkNBQTZDO0lBQzdDLGFBQWE7SUFDYixlQUFlLEVBQ2hCOztBQUdIO0VBQ0U7SUFDRSxXQUFXLEVBQUE7RUFFYjtJQUNFLFdBQVcsRUFBQTtFQUViO0lBQ0UsV0FBVyxFQUFBO0VBRWI7SUFDRSxXQUFXLEVBQUEsRUFBQTs7QUN0QmY7RUFDRSxhQUFhLEVBQ2Q7O0FDTUQ7RUFDRSwrRkFBaUM7RUFDakMsZ0RBQWlDO0VBQ2pDLHdFQUF3RTtFQUN4RSx5QkFBeUI7RUFDekIsMkJBQTJCO0VBQzNCLGdCQUFnQjtFQUNoQiwwQkFBa0I7S0FBbEIsdUJBQWtCO01BQWxCLHNCQUFrQjtVQUFsQixrQkFBa0I7RUFDbEIsbUJBQW1CLEVBOEJwQjtFQXRDRDtJQVdJLFlBQVU7SUFDVixtQkFBbUI7SUFDbkIsa0JBcEJZO0lBcUJaLHFCQUFxQjtJQUNyQixxQkFBYztJQUFkLGNBQWM7SUFDZCxzQkFBd0I7UUFBeEIsd0JBQXdCO0lBQ3hCLDJCQUFzQjtRQUF0QixzQkFBc0I7SUFDdEIsMkJBQXVCO1FBQXZCLHVCQUF1QixFQUN4QjtFQW5CSDtJQXNCSSxnREFBaUM7SUFDakMsNEJBQTRCLEVBQzdCO0VBeEJIO0lBOEJJLDhGQUFpQyxFQU9sQzs7QUFHSDtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsMkJBQXFCO0VBQ3JCLGVDdkRXO0VEd0RYLFdBQVc7RUFDWCx5QkFBeUIsRUFLMUI7RUFkRDtJQVlJLFdBQVcsRUFDWjs7QUFHSDtFQUNFLFlBQVE7TUFBUixRQUFRO0VBQ1IsbUJBQW1CO0VBQ25CLFlBQVksRUFvQ2I7RUF2Q0Q7SUFRTSxpQkFBaUI7SUFDakIsMktBQWlDLEVBQ2xDO0VBVkw7SUFjSSx5S0FBaUM7SUFDakMsOEZBQThGO0lBQzlGLHlCQUF5QjtJQUN6QiwyQkFBMkI7SUFDM0IsYUFBZTtJQUVmLG9CQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsYUFBTztJQUNQLDJCQUEyQixFQVc1QjtJQVRDO01BekJKO1FBMEJNLFdBeEZPO1FBeUZQLFdBQU8sRUFPVixFQUFBO0lBSkM7TUE5Qko7UUErQk0sYUFBZTtRQUNmLGFBQU8sRUFFVixFQUFBO0VBbENIO0lBcUNJLDRCQUE0QixFQUM3QiIsImZpbGUiOiJpbmRleC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogIERvIG5vdCByZW1vdmUgdGhpcyBjb21tZW50cyBiZWxsb3cuIEl0J3MgdGhlIG1hcmtlcnMgdXNlZCBieSB3aXJlZGVwIHRvIGluamVjdFxyXG4gKiAgc2FzcyBkZXBlbmRlbmNpZXMgd2hlbiBkZWZpbmVkIGluIHRoZSBib3dlci5qc29uIG9mIHlvdXIgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG4vLyBib3dlcjpzY3NzXHJcbi8vIGVuZGJvd2VyXHJcblxyXG5AaW1wb3J0ICd2YXJpYWJsZXMnO1xyXG5cclxuQGltcG9ydCB1cmwoaHR0cDovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Um9ib3RvK1NsYWI6NDAwLDcwMHxSb2JvdG86NDAwLDcwMCw3MDBpdGFsaWMsNDAwaXRhbGljKTtcclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvIFNsYWInLCBzZXJpZjtcclxufVxyXG5cclxuYSB7XHJcbiAgY29sb3I6ICNGRkNDQkM7XHJcbn1cclxuXHJcbltsYXlvdXQ9cm93XSB7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxufVxyXG5cclxuLmJyb3dzZWhhcHB5IHtcclxuICBtYXJnaW46IDAuMmVtIDA7XHJcbiAgYmFja2dyb3VuZDogI2NjYztcclxuICBjb2xvcjogIzAwMDtcclxuICBwYWRkaW5nOiAwLjJlbSAwO1xyXG59XHJcblxyXG4udGh1bWJuYWlsIHtcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG5cclxuICBpbWcucHVsbC1yaWdodCB7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICB9XHJcbn1cclxuXHJcbm1kLXRvb2xiYXIubWQtZGVmYXVsdC10aGVtZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbnNlY3Rpb24uanVtYm90cm9uIHtcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gIHBhZGRpbmc6IDFweCAzMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNCRjM2MEM7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICBjb2xvcjogd2hpdGU7XHJcblxyXG4gIGgxIHtcclxuICAgICRoMVNpemU6IDNlbTtcclxuICAgIGZvbnQtc2l6ZTogJGgxU2l6ZSAqIDAuODtcclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJGxheW91dC1icmVha3BvaW50LXhzKSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogJGgxU2l6ZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi50ZWNocyB7XHJcblxyXG4gIG1kLWNhcmQge1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG5cclxuICAgIGltZy5wdWxsLXJpZ2h0IHtcclxuICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICB3aWR0aDogNTBweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5hYm91dC10ZXh0IHtcclxuICBmb250LXNpemU6IDEuNWVtO1xyXG4gIHBhZGRpbmc6IDJlbTtcclxuICBtYXgtd2lkdGg6IDMyZW07XHJcbn1cclxuXHJcbi5mbGV4LWlucHV0IHtcclxuICB3aWR0aDogODAlO1xyXG59XHJcblxyXG4vKipcclxuICogIERvIG5vdCByZW1vdmUgdGhpcyBjb21tZW50cyBiZWxsb3cuIEl0J3MgdGhlIG1hcmtlcnMgdXNlZCBieSBndWxwLWluamVjdCB0byBpbmplY3RcclxuICogIGFsbCB5b3VyIHNhc3MgZmlsZXMgYXV0b21hdGljYWxseVxyXG4gKi9cclxuLy8gaW5qZWN0b3JcclxuQGltcG9ydCBcIl92YXJpYWJsZXMuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiY29tcG9uZW50cy9tYWxhcmtleS9tYWxhcmtleS5zY3NzXCI7XHJcbkBpbXBvcnQgXCJjb21wb25lbnRzL25hdmJhci9uYXZiYXIuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiY29tcG9uZW50cy90bi1rZXlib2FyZC90bi1rZXlib2FyZC5zY3NzXCI7XHJcbi8vIGVuZGluamVjdG9yXHJcbiIsIi8qKlxyXG4gKiAgRG8gbm90IHJlbW92ZSB0aGlzIGNvbW1lbnRzIGJlbGxvdy4gSXQncyB0aGUgbWFya2VycyB1c2VkIGJ5IHdpcmVkZXAgdG8gaW5qZWN0XHJcbiAqICBzYXNzIGRlcGVuZGVuY2llcyB3aGVuIGRlZmluZWQgaW4gdGhlIGJvd2VyLmpzb24gb2YgeW91ciBkZXBlbmRlbmNpZXNcclxuICovXG5AaW1wb3J0IHVybChodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG8rU2xhYjo0MDAsNzAwfFJvYm90bzo0MDAsNzAwLDcwMGl0YWxpYyw0MDBpdGFsaWMpO1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvIFNsYWInLCBzZXJpZjsgfVxuXG5hIHtcbiAgY29sb3I6ICNGRkNDQkM7IH1cblxuW2xheW91dD1yb3ddIHtcbiAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxuXG4uYnJvd3NlaGFwcHkge1xuICBtYXJnaW46IDAuMmVtIDA7XG4gIGJhY2tncm91bmQ6ICNjY2M7XG4gIGNvbG9yOiAjMDAwO1xuICBwYWRkaW5nOiAwLjJlbSAwOyB9XG5cbi50aHVtYm5haWwge1xuICBoZWlnaHQ6IDIwMHB4OyB9XG4gIC50aHVtYm5haWwgaW1nLnB1bGwtcmlnaHQge1xuICAgIHdpZHRoOiA1MHB4OyB9XG5cbm1kLXRvb2xiYXIubWQtZGVmYXVsdC10aGVtZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyB9XG5cbnNlY3Rpb24uanVtYm90cm9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgcGFkZGluZzogMXB4IDMwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNCRjM2MEM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6IHdoaXRlOyB9XG4gIHNlY3Rpb24uanVtYm90cm9uIGgxIHtcbiAgICBmb250LXNpemU6IDIuNGVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gICAgICBzZWN0aW9uLmp1bWJvdHJvbiBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogM2VtOyB9IH1cblxuLnRlY2hzIG1kLWNhcmQge1xuICBwYWRkaW5nOiAxZW07IH1cbiAgLnRlY2hzIG1kLWNhcmQgaW1nLnB1bGwtcmlnaHQge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICB3aWR0aDogNTBweDsgfVxuXG4uYWJvdXQtdGV4dCB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIHBhZGRpbmc6IDJlbTtcbiAgbWF4LXdpZHRoOiAzMmVtOyB9XG5cbi5mbGV4LWlucHV0IHtcbiAgd2lkdGg6IDgwJTsgfVxuXG4vKipcclxuICogIERvIG5vdCByZW1vdmUgdGhpcyBjb21tZW50cyBiZWxsb3cuIEl0J3MgdGhlIG1hcmtlcnMgdXNlZCBieSBndWxwLWluamVjdCB0byBpbmplY3RcclxuICogIGFsbCB5b3VyIHNhc3MgZmlsZXMgYXV0b21hdGljYWxseVxyXG4gKi9cbi5hY21lLW1hbGFya2V5IHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIGNvbG9yOiAjY2IzODM3OyB9XG4gIC5hY21lLW1hbGFya2V5OmFmdGVyIHtcbiAgICBhbmltYXRpb246IGN1cnNvci1ibGluayAwLjRzIGxpbmVhciBpbmZpbml0ZTtcbiAgICBjb250ZW50OiBcInxcIjtcbiAgICBjb2xvcjogI2NiMzgzNzsgfVxuXG5Aa2V5ZnJhbWVzIGN1cnNvci1ibGluayB7XG4gIDElIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIDQwJSB7XG4gICAgb3BhY2l0eTogMDsgfVxuICA2MCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbi5hY21lLW5hdmJhci10ZXh0IHtcbiAgY29sb3I6IHdoaXRlOyB9XG5cbi5waWFuby1rZXkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTc1ZGVnLCB3aGl0ZSAwJSwgI2YyZjJmMiA1MCUsICNlMGUwZTAgNTElLCB3aGl0ZXNtb2tlIDEwMCUpO1xuICBib3gtc2hhZG93OiBpbnNldCAwIC01cHggNXB4IHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1wb3NpdGlvbiAwLjJzIGVhc2Utb3V0LCBib3gtc2hhZG93IDAuMnMgZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcbiAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDIwMCU7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAucGlhbm8ta2V5IC5pbm5lciB7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiAyNXZoO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgLnBpYW5vLWtleS5ub3RlLWRvd24ge1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLThweCA1cHggcmdiYSgwLCAwLCAwLCAwLjgpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTsgfVxuICAucGlhbm8ta2V5LmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTc1ZGVnLCAjYWJiMGJhIDAlLCAjOWRhM2FmIDUwJSwgIzg5OTA5ZiA1MSUsICNhMGE1YjEgMTAwJSk7IH1cblxuLmtleS1sYWJlbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAzMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiA3MCU7XG4gIG1hcmdpbi1sZWZ0OiAtMjAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTAlKTtcbiAgY29sb3I6ICNCRjM2MEM7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC44czsgfVxuICAua2V5LWxhYmVsLnZpc2libGUge1xuICAgIG9wYWNpdHk6IDE7IH1cblxuLmJsYWNrLWtleSB7XG4gIGZsZXg6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjA7IH1cbiAgLmJsYWNrLWtleS5kaXNhYmxlZCAuaW5uZXIge1xuICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE3NWRlZywgIzNlNDM0YyAwJSwgIzQ3NGM1NyA5JSwgIzU1NWI2OCAyNCUsICMzZTQzNGMgNDAlLCAjMmUzMTM4IDQ5JSwgIzU1NWI2OCA1MCUsICM2ZTc2ODcgNjElLCAjOGY5NmEzIDc1JSwgIzgxODg5OCA4OCUsICM3MzdiOGMgMTAwJSk7IH1cbiAgLmJsYWNrLWtleSAuaW5uZXIge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxNzVkZWcsICMxMjEyMTIgMCUsICMxYzFjMWMgOSUsICMyYjJiMmIgMjQlLCAjMTIxMjEyIDQwJSwgYmxhY2sgNDklLCAjMmIyYjJiIDUwJSwgIzQ3NDc0NyA2MSUsICM2NjY2NjYgNzUlLCAjNTk1OTU5IDg4JSwgIzRkNGQ0ZCAxMDAlKTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLXBvc2l0aW9uIDAuMnMgZWFzZS1vdXQsIGJhY2tncm91bmQtc2l6ZSAwLjJzLCBib3gtc2hhZG93IDAuMnMgZWFzZS1vdXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwO1xuICAgIGJhY2tncm91bmQtc2l6ZTogYXV0byAyMDAlO1xuICAgIHdpZHRoOiA2LjR2dztcbiAgICBwYWRkaW5nLXRvcDogMTcuNXZoO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtMy4ydnc7XG4gICAgYm9yZGVyLXJhZGl1czogMCAwIDF2dyAxdnc7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgICAgIC5ibGFjay1rZXkgLmlubmVyIHtcbiAgICAgICAgd2lkdGg6IDR2dztcbiAgICAgICAgbGVmdDogLTJ2dzsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEyODBweCkge1xuICAgICAgLmJsYWNrLWtleSAuaW5uZXIge1xuICAgICAgICB3aWR0aDogMi40dnc7XG4gICAgICAgIGxlZnQ6IC0xLjJ2dzsgfSB9XG4gIC5ibGFjay1rZXkubm90ZS1kb3duIC5pbm5lciB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlOyB9XG4iLCIuYWNtZS1tYWxhcmtleSB7XHJcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgY29sb3I6ICNjYjM4Mzc7XHJcblxyXG4gICY6YWZ0ZXIge1xyXG4gICAgYW5pbWF0aW9uOiBjdXJzb3ItYmxpbmsgMC40cyBsaW5lYXIgaW5maW5pdGU7XHJcbiAgICBjb250ZW50OiBcInxcIjtcclxuICAgIGNvbG9yOiAjY2IzODM3O1xyXG4gIH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBjdXJzb3ItYmxpbmsge1xyXG4gIDElIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gIDQwJSB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxuICA2MCUge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbiAgMTAwJSB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxufVxyXG4iLCIuYWNtZS1uYXZiYXItdGV4dHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuIiwiQGltcG9ydCAndmFyaWFibGVzJztcclxuJGtleUhlaWdodDogMjV2aDtcclxuJGJrV2lkdGg6IDR2dztcclxuJHdrQ29sb3JTdG9wMDogaHNsYSgwLDAlLDEwMCUsMSk7XHJcbiR3a0NvbG9yU3RvcDE6IGhzbGEoMCwwJSw5NSUsMSk7XHJcbiR3a0NvbG9yU3RvcDI6IGhzbGEoMCwwJSw4OCUsMSk7XHJcbiR3a0NvbG9yU3RvcDM6IGhzbGEoMCwwJSw5NiUsMSk7XHJcblxyXG4ucGlhbm8ta2V5IHtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTc1ZGVnLCAkd2tDb2xvclN0b3AwIDAlLCAkd2tDb2xvclN0b3AxIDUwJSwgJHdrQ29sb3JTdG9wMiA1MSUsICR3a0NvbG9yU3RvcDMgMTAwJSk7XHJcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAtNXB4IDVweCBoc2xhKDAsIDAsIDAsIDAuOCk7XHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1wb3NpdGlvbiAwLjJzIGVhc2Utb3V0LCBib3gtc2hhZG93IDAuMnMgZWFzZS1vdXQ7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byAyMDAlO1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxuICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gIC5pbm5lciB7XHJcbiAgICBjb2xvcjogaHNsKDAsIDAsIDUwKTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAka2V5SGVpZ2h0O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxuXHJcbiAgJi5ub3RlLWRvd24ge1xyXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAtOHB4IDVweCBoc2xhKDAsIDAsIDAsIDAuOCk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgfVxyXG5cclxuICAmLmRpc2FibGVkIHtcclxuICAgICRodWVBbXQ6IDIyMDtcclxuICAgICRzYXR1cmF0aW9uQW10OiAxMCU7XHJcbiAgICAkbGlnaHRuZXNzQW10OiAtMzAlO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE3NWRlZywgYWRqdXN0LWNvbG9yKCR3a0NvbG9yU3RvcDAsICRodWU6ICRodWVBbXQsICRzYXR1cmF0aW9uOiAkc2F0dXJhdGlvbkFtdCwgJGxpZ2h0bmVzczogJGxpZ2h0bmVzc0FtdCkgMCUsXHJcbiAgICAgIGFkanVzdC1jb2xvcigkd2tDb2xvclN0b3AxLCAkaHVlOiAkaHVlQW10LCAkc2F0dXJhdGlvbjogJHNhdHVyYXRpb25BbXQsICRsaWdodG5lc3M6ICRsaWdodG5lc3NBbXQpIDUwJSxcclxuICAgICAgYWRqdXN0LWNvbG9yKCR3a0NvbG9yU3RvcDIsICRodWU6ICRodWVBbXQsICRzYXR1cmF0aW9uOiAkc2F0dXJhdGlvbkFtdCwgJGxpZ2h0bmVzczogJGxpZ2h0bmVzc0FtdCkgNTElLFxyXG4gICAgICBhZGp1c3QtY29sb3IoJHdrQ29sb3JTdG9wMywgJGh1ZTogJGh1ZUFtdCwgJHNhdHVyYXRpb246ICRzYXR1cmF0aW9uQW10LCAkbGlnaHRuZXNzOiAkbGlnaHRuZXNzQW10KSAxMDAlKTtcclxuICAgIC5pbm5lciB7XHJcbiAgICAgIC8vIGJvcmRlcjogNHB4IGRhc2hlZCBoc2woMjIwLCAzMCwgNTApO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmtleS1sYWJlbCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJvdHRvbTogMzBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd2lkdGg6IDcwJTtcclxuICBtYXJnaW4tbGVmdDogLTIwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTAlKTtcclxuICBjb2xvcjogJHJlZDtcclxuICBvcGFjaXR5OiAwO1xyXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC44cztcclxuXHJcbiAgJi52aXNpYmxlIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG59XHJcblxyXG4uYmxhY2sta2V5IHtcclxuICBmbGV4OiAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB6LWluZGV4OiAyMDtcclxuXHJcbiAgJi5kaXNhYmxlZCB7XHJcbiAgICAuaW5uZXIge1xyXG4gICAgICAvLyBib3JkZXI6IDRweCBkYXNoZWQgaHNsKDIyMCwgMzAsIDUwKTtcclxuICAgICAgYm9yZGVyLXRvcDogbm9uZTtcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE3NWRlZywgaHNsYSgyMjAsMTAlLDI3JSwxKSAwJSxoc2xhKDIyMCwxMCUsMzElLDEpIDklLGhzbGEoMjIwLDEwJSwzNyUsMSkgMjQlLGhzbGEoMjIwLDEwJSwyNyUsMSkgNDAlLGhzbGEoMjIwLDEwJSwyMCUsMSkgNDklLGhzbGEoMjIwLDEwJSwzNyUsMSkgNTAlLGhzbGEoMjIwLDEwJSw0OCUsMSkgNjElLGhzbGEoMjIwLDEwJSw2MCUsMSkgNzUlLGhzbGEoMjIwLDEwJSw1NSUsMSkgODglLGhzbGEoMjIwLDEwJSw1MCUsMSkgMTAwJSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuaW5uZXIge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE3NWRlZywgaHNsYSgwLDAlLDclLDEpIDAlLGhzbGEoMCwwJSwxMSUsMSkgOSUsaHNsYSgwLDAlLDE3JSwxKSAyNCUsaHNsYSgwLDAlLDclLDEpIDQwJSxoc2xhKDAsMCUsMCUsMSkgNDklLGhzbGEoMCwwJSwxNyUsMSkgNTAlLGhzbGEoMCwwJSwyOCUsMSkgNjElLGhzbGEoMCwwJSw0MCUsMSkgNzUlLGhzbGEoMCwwJSwzNSUsMSkgODglLGhzbGEoMCwwJSwzMCUsMSkgMTAwJSk7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLXBvc2l0aW9uIDAuMnMgZWFzZS1vdXQsIGJhY2tncm91bmQtc2l6ZSAwLjJzLCBib3gtc2hhZG93IDAuMnMgZWFzZS1vdXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMjAwJTtcclxuICAgIHdpZHRoOiAkYmtXaWR0aCAqIDEuNjtcclxuICAgIC8vIGhlaWdodDogJGtleUhlaWdodCAqIDAuODtcclxuICAgIHBhZGRpbmctdG9wOiAka2V5SGVpZ2h0ICogMC43O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogLSRia1dpZHRoICogMC44O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMCAwIDF2dyAxdnc7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJGxheW91dC1icmVha3BvaW50LXhzKSB7XHJcbiAgICAgIHdpZHRoOiAkYmtXaWR0aDtcclxuICAgICAgbGVmdDogLSRia1dpZHRoIC8gMjtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkbGF5b3V0LWJyZWFrcG9pbnQtbWQpIHtcclxuICAgICAgd2lkdGg6ICRia1dpZHRoICogMC42O1xyXG4gICAgICBsZWZ0OiAtJGJrV2lkdGggKiAwLjM7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLm5vdGUtZG93biAuaW5uZXIge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xyXG4gIH1cclxufVxyXG4iLCIkcmVkOiAjQkYzNjBDO1xyXG4kbGF5b3V0LWJyZWFrcG9pbnQteHM6ICAgICA2MDBweCAhZGVmYXVsdDtcclxuJGxheW91dC1icmVha3BvaW50LXNtOiAgICAgOTYwcHggIWRlZmF1bHQ7XHJcbiRsYXlvdXQtYnJlYWtwb2ludC1tZDogICAgIDEyODBweCAhZGVmYXVsdDtcclxuJGxheW91dC1icmVha3BvaW50LWxnOiAgICAgMTkyMHB4ICFkZWZhdWx0O1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
